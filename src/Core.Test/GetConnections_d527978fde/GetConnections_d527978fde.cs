// ********RoostGPT********
// Test generated by RoostGPT for test csharp-coding-examples using AI Type Open AI and AI Model gpt-4



// ********RoostGPT********
using System;
using System.Net.Http;
using NUnit.Framework;
using SwissTransport.Core;
using SwissTransport.Models;
using Moq;
using Moq.Protected;
using System.Threading;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace SwissTransport.Core.Test
{
    [TestFixture]
    public class GetConnections_d527978fde
    {
        private Mock<HttpMessageHandler> _mockHttpMessageHandler;
        private HttpClient _httpClient;
        private Transport _transport;

        [SetUp]
        public void SetUp()
        {
            _mockHttpMessageHandler = new Mock<HttpMessageHandler>();
            _httpClient = new HttpClient(_mockHttpMessageHandler.Object);
            _transport = new Transport(_httpClient);
        }

        [TearDown]
        public void TearDown()
        {
            _httpClient.Dispose();
            _transport.Dispose();
        }

        [Test]
        public void GetConnections_ValidStations_ReturnsConnections()
        {
            // Arrange
            var expectedConnections = new Connections();
            var httpResponse = new HttpResponseMessage
            {
                Content = new StringContent(JsonConvert.SerializeObject(expectedConnections))
            };

            _mockHttpMessageHandler.Protected()
                .Setup<Task<HttpResponseMessage>>("SendAsync", ItExpr.IsAny<HttpRequestMessage>(), ItExpr.IsAny<CancellationToken>())
                .ReturnsAsync(httpResponse);

            // Act
            var actualConnections = _transport.GetConnections("fromStation", "toStation");

            // Assert
            Assert.AreEqual(expectedConnections, actualConnections);
        }

        [Test]
        public void GetConnections_InvalidFromStation_ThrowsArgumentNullException()
        {
            // Assert
            var ex = Assert.Throws<ArgumentNullException>(() => _transport.GetConnections(null, "toStation"));
            Assert.That(ex.ParamName, Is.EqualTo("fromStation"));
        }

        [Test]
        public void GetConnections_InvalidToStation_ThrowsArgumentNullException()
        {
            // Assert
            var ex = Assert.Throws<ArgumentNullException>(() => _transport.GetConnections("fromStation", null));
            Assert.That(ex.ParamName, Is.EqualTo("toStation"));
        }
    }
}
