// ********RoostGPT********
// Test generated by RoostGPT for test csharp-coding-examples using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
using System;
using System.Net.Http;
using System.Threading.Tasks;
using Newtonsoft.Json;
using NUnit.Framework;
using SwissTransport.Models;
using SwissTransport.Core;
using System.Net.Http;
using RichardSzalay.MockHttp;

namespace SwissTransport.Core.Test
{
    [TestFixture]
    public class GetStations_7bfec3227d
    {
        private Transport transport;
        private MockHttpMessageHandler mockHttp;

        [SetUp]
        public void SetUp()
        {
            mockHttp = new MockHttpMessageHandler();
            var httpClient = new HttpClient(mockHttp);
            transport = new Transport(httpClient);
        }

        [Test]
        public void GetStations_ValidQuery_ReturnsStations()
        {
            // Arrange
            string query = "Zurich";
            mockHttp.When($"{Transport.WebApiHost}locations?query={query}")
                    .Respond("application/json", JsonConvert.SerializeObject(new Stations())); // TODO: Replace with actual JSON response

            // Act
            var result = transport.GetStations(query);

            // Assert
            Assert.IsNotNull(result, "Result should not be null for a valid query.");
            Assert.IsInstanceOf<Stations>(result, "Result should be of type Stations.");
        }

        [Test]
        public void GetStations_EmptyQuery_ThrowsArgumentNullException()
        {
            // Arrange
            string query = "";

            // Act & Assert
            var ex = Assert.Throws<ArgumentNullException>(() => transport.GetStations(query));
            Assert.That(ex.ParamName, Is.EqualTo("query"), "ArgumentNullException should be thrown with 'query' as parameter name.");
        }

        [Test]
        public void GetStations_NullQuery_ThrowsArgumentNullException()
        {
            // Arrange
            string query = null;

            // Act & Assert
            var ex = Assert.Throws<ArgumentNullException>(() => transport.GetStations(query));
            Assert.That(ex.ParamName, Is.EqualTo("query"), "ArgumentNullException should be thrown with 'query' as parameter name.");
        }

        [TearDown]
        public void TearDown()
        {
            transport.Dispose();
        }
    }
}

