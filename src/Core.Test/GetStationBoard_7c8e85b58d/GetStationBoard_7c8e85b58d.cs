// ********RoostGPT********
// Test generated by RoostGPT for test csharp-coding-examples using AI Type Open AI and AI Model gpt-4



// ********RoostGPT********
using System;
using NUnit.Framework;
using SwissTransport.Core;
using SwissTransport.Models;
using System.Net.Http;

namespace SwissTransport.Core.Test
{
    public class GetStationBoard_7c8e85b58d
    {
        private Transport transport;
        private HttpClient httpClient;

        [SetUp]
        public void Setup()
        {
            httpClient = new HttpClient();
            transport = new Transport();
        }

        [Test]
        public void GetStationBoard_ValidStationAndId_ReturnsStationBoardRoot()
        {
            // TODO: Replace "ValidStation" and "ValidId" with actual station and id
            var station = "ValidStation";
            var id = "ValidId";

            var result = transport.GetStationBoard(station, id);

            Assert.IsNotNull(result);
            Assert.IsInstanceOf<StationBoardRoot>(result);
        }

        [Test]
        public void GetStationBoard_InvalidStation_ThrowsArgumentNullException()
        {
            var station = string.Empty;
            var id = "ValidId";

            var ex = Assert.Throws<ArgumentNullException>(() => transport.GetStationBoard(station, id));
            Assert.That(ex.ParamName, Is.EqualTo("station"));
        }

        [Test]
        public void GetStationBoard_InvalidId_ThrowsArgumentNullException()
        {
            var station = "ValidStation";
            var id = string.Empty;

            var ex = Assert.Throws<ArgumentNullException>(() => transport.GetStationBoard(station, id));
            Assert.That(ex.ParamName, Is.EqualTo("id"));
        }

        [TearDown]
        public void TearDown()
        {
            transport.Dispose();
            httpClient.Dispose();
        }
    }
}
