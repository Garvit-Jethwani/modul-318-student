// ********RoostGPT********
// Test generated by RoostGPT for test csharp-coding-examples using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
using NUnit.Framework;
using SwissTransport.Core;
using SwissTransport.Models;
using System;
using System.Net.Http;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace SwissTransport.Core.Test
{
    [TestFixture]
    public class GetStationBoard_7c8e85b58d
    {
        private Transport _transport;
        private HttpClient _httpClient;
        private Uri _expectedUri;

        [SetUp]
        public void SetUp()
        {
            _httpClient = new HttpClient();
            _transport = new Transport(_httpClient);
        }

        [Test]
        public void GetStationBoard_ValidParameters_ReturnsStationBoardRoot()
        {
            // Arrange
            var station = "Zurich";
            var id = "8503000";
            _expectedUri = new Uri($"https://transport.opendata.ch/v1/stationboard?station={station}&id={id}");

            // Act
            var result = _transport.GetStationBoard(station, id);

            // Assert
            Assert.IsNotNull(result);
            Assert.IsInstanceOf<StationBoardRoot>(result);
            // TODO: Mock the GetObject method to return a predetermined response for this test.
        }

        [Test]
        public void GetStationBoard_NullOrEmptyStation_ThrowsArgumentNullException()
        {
            // Arrange
            string station = null;
            var id = "8503000";

            // Act & Assert
            var ex = Assert.Throws<ArgumentNullException>(() => _transport.GetStationBoard(station, id));
            Assert.That(ex.ParamName, Is.EqualTo(nameof(station)));
        }

        [Test]
        public void GetStationBoard_NullOrEmptyId_ThrowsArgumentNullException()
        {
            // Arrange
            var station = "Zurich";
            string id = null;

            // Act & Assert
            var ex = Assert.Throws<ArgumentNullException>(() => _transport.GetStationBoard(station, id));
            Assert.That(ex.ParamName, Is.EqualTo(nameof(id)));
        }

        [TearDown]
        public void TearDown()
        {
            _httpClient?.Dispose();
        }
    }
}

