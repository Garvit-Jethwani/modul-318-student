// ********RoostGPT********
// Test generated by RoostGPT for test csharp-coding-examples using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
using System;
using System.Net.Http;
using NUnit.Framework;
using SwissTransport.Core;
using SwissTransport.Models;

namespace SwissTransport.Core.Test
{
    [TestFixture]
    public class Dispose_b753ff24a4
    {
        private Transport transportUnderTest;
        private bool disposeCalled;

        [SetUp]
        public void SetUp()
        {
            // Mocking HttpClient by creating a subclass that overrides the Dispose method
            transportUnderTest = new TransportMock();
            disposeCalled = false;
        }

        [Test]
        public void Dispose_DisposesHttpClient_Success()
        {
            // Act
            transportUnderTest.Dispose();

            // Assert
            Assert.IsTrue(disposeCalled, "The Dispose method should have been called on HttpClient instance.");
        }

        [Test]
        public void Dispose_CalledMultipleTimes_NoExceptionThrown()
        {
            // Act & Assert
            Assert.DoesNotThrow(() =>
            {
                transportUnderTest.Dispose();
                transportUnderTest.Dispose();
            }, "Calling Dispose multiple times should not throw any exceptions.");
        }

        // Dispose implementation with a callback for testing purposes
        private class TransportMock : Transport
        {
            public override void Dispose()
            {
                base.Dispose();
                disposeCalled = true;
                // After calling the base Dispose method, we set disposeCalled to true indicating the call was made
            }
        }

        [TearDown]
        public void TearDown()
        {
            // Ensuring that resources are cleaned up after tests
            transportUnderTest?.Dispose();
        }
    }
}

